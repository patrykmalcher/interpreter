-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Fox/Par.y
-----------------------------------------------------------------------------

state 93 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListStmt                                (4)
	Block -> '{' ListStmt '}'                          (5)
	ListStmt ->                                        (6)
	ListStmt -> Stmt ListStmt                          (7)
	Stmt -> Block                                      (8)
	Stmt -> Type Ident '=' Expr ';'                    (9)
	Stmt -> Ident '=' Expr ';'                         (10)
	Stmt -> 'return' Expr ';'                          (11)
	Stmt -> 'if' '(' Expr ')' Stmt                     (12)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (13)
	Stmt -> 'while' '(' Expr ')' Stmt                  (14)
	Stmt -> Expr ';'                                   (15)
	Stmt -> Fun                                        (16)
	Fun -> Type Ident '(' ListArg ')' Block            (17)
	Arg -> 'var' Type Ident                            (18)
	Arg -> Type Ident                                  (19)
	ListArg ->                                         (20)
	ListArg -> Arg                                     (21)
	ListArg -> Arg ',' ListArg                         (22)
	Type -> 'int'                                      (23)
	Type -> 'string'                                   (24)
	Type -> 'boolean'                                  (25)
	Expr6 -> Ident                                     (26)
	Expr6 -> Integer                                   (27)
	Expr6 -> 'true'                                    (28)
	Expr6 -> 'false'                                   (29)
	Expr6 -> Ident '(' ListExpr ')'                    (30)
	Expr6 -> String                                    (31)
	Expr6 -> '(' Expr ')'                              (32)
	Expr5 -> '-' Expr6                                 (33)
	Expr5 -> '!' Expr6                                 (34)
	Expr5 -> Expr6                                     (35)
	Expr4 -> Expr4 MulOp Expr5                         (36)
	Expr4 -> Expr5                                     (37)
	Expr3 -> Expr3 AddOp Expr4                         (38)
	Expr3 -> Expr4                                     (39)
	Expr2 -> Expr2 RelOp Expr3                         (40)
	Expr2 -> Expr3                                     (41)
	Expr1 -> Expr2 '&&' Expr1                          (42)
	Expr1 -> Expr2                                     (43)
	Expr -> Expr1 '||' Expr                            (44)
	Expr -> Expr1                                      (45)
	ListExpr ->                                        (46)
	ListExpr -> Expr                                   (47)
	ListExpr -> Expr ',' ListExpr                      (48)
	AddOp -> '+'                                       (49)
	AddOp -> '-'                                       (50)
	MulOp -> '*'                                       (51)
	MulOp -> '/'                                       (52)
	MulOp -> '%'                                       (53)
	RelOp -> '<'                                       (54)
	RelOp -> '<='                                      (55)
	RelOp -> '>'                                       (56)
	RelOp -> '>='                                      (57)
	RelOp -> '=='                                      (58)
	RelOp -> '!='                                      (59)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	','            { PT _ (TS _ 9) }
	'-'            { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'boolean'      { PT _ (TS _ 19) }
	'else'         { PT _ (TS _ 20) }
	'false'        { PT _ (TS _ 21) }
	'if'           { PT _ (TS _ 22) }
	'int'          { PT _ (TS _ 23) }
	'return'       { PT _ (TS _ 24) }
	'string'       { PT _ (TS _ 25) }
	'true'         { PT _ (TS _ 26) }
	'var'          { PT _ (TS _ 27) }
	'while'        { PT _ (TS _ 28) }
	'{'            { PT _ (TS _ 29) }
	'||'           { PT _ (TS _ 30) }
	'}'            { PT _ (TS _ 31) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Block           rule  5
	ListStmt        rules 6, 7
	Stmt            rules 8, 9, 10, 11, 12, 13, 14, 15, 16
	Fun             rule  17
	Arg             rules 18, 19
	ListArg         rules 20, 21, 22
	Type            rules 23, 24, 25
	Expr6           rules 26, 27, 28, 29, 30, 31, 32
	Expr5           rules 33, 34, 35
	Expr4           rules 36, 37
	Expr3           rules 38, 39
	Expr2           rules 40, 41
	Expr1           rules 42, 43
	Expr            rules 44, 45
	ListExpr        rules 46, 47, 48
	AddOp           rules 49, 50
	MulOp           rules 51, 52, 53
	RelOp           rules 54, 55, 56, 57, 58, 59

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'boolean'      shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'return'       shift, and enter state 26
	'string'       shift, and enter state 27
	'true'         shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32
	%eof           reduce using rule 6

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Program        goto state 6
	Block          goto state 7
	ListStmt       goto state 8
	Stmt           goto state 9
	Fun            goto state 10
	Type           goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	Stmt -> Ident . '=' Expr ';'                        (rule 10)
	Expr6 -> Ident .                                    (rule 26)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 30)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&&'           reduce using rule 26
	'('            shift, and enter state 60
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'/'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'='            shift, and enter state 61
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'||'           reduce using rule 26


State 4

	Expr6 -> Integer .                                  (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'&&'           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'+'            reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'/'            reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'||'           reduce using rule 27


State 5

	Expr6 -> String .                                   (rule 31)

	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&&'           reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'||'           reduce using rule 31


State 6

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 7

	Stmt -> Block .                                     (rule 8)

	'!'            reduce using rule 8
	'('            reduce using rule 8
	'-'            reduce using rule 8
	'boolean'      reduce using rule 8
	'else'         reduce using rule 8
	'false'        reduce using rule 8
	'if'           reduce using rule 8
	'int'          reduce using rule 8
	'return'       reduce using rule 8
	'string'       reduce using rule 8
	'true'         reduce using rule 8
	'while'        reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	L_quoted       reduce using rule 8
	%eof           reduce using rule 8


State 8

	Program -> ListStmt .                               (rule 4)

	%eof           reduce using rule 4


State 9

	ListStmt -> Stmt . ListStmt                         (rule 7)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'boolean'      shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'return'       shift, and enter state 26
	'string'       shift, and enter state 27
	'true'         shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 30
	'}'            reduce using rule 6
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32
	%eof           reduce using rule 6

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	ListStmt       goto state 59
	Stmt           goto state 9
	Fun            goto state 10
	Type           goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 10

	Stmt -> Fun .                                       (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	'boolean'      reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	%eof           reduce using rule 16


State 11

	Stmt -> Type . Ident '=' Expr ';'                   (rule 9)
	Fun -> Type . Ident '(' ListArg ')' Block           (rule 17)

	L_Ident        shift, and enter state 2

	Ident          goto state 58

State 12

	Expr5 -> Expr6 .                                    (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 13

	Expr4 -> Expr5 .                                    (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 14

	Expr4 -> Expr4 . MulOp Expr5                        (rule 36)
	Expr3 -> Expr4 .                                    (rule 39)

	'!='           reduce using rule 39
	'%'            shift, and enter state 55
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            shift, and enter state 56
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            shift, and enter state 57
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39

	MulOp          goto state 54

State 15

	Expr3 -> Expr3 . AddOp Expr4                        (rule 38)
	Expr2 -> Expr3 .                                    (rule 41)

	'!='           reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'+'            shift, and enter state 52
	','            reduce using rule 41
	'-'            shift, and enter state 53
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41

	AddOp          goto state 51

State 16

	Expr2 -> Expr2 . RelOp Expr3                        (rule 40)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 42)
	Expr1 -> Expr2 .                                    (rule 43)

	'!='           shift, and enter state 44
	'&&'           shift, and enter state 45
	')'            reduce using rule 43
	','            reduce using rule 43
	';'            reduce using rule 43
	'<'            shift, and enter state 46
	'<='           shift, and enter state 47
	'=='           shift, and enter state 48
	'>'            shift, and enter state 49
	'>='           shift, and enter state 50
	'||'           reduce using rule 43

	RelOp          goto state 43

State 17

	Expr -> Expr1 . '||' Expr                           (rule 44)
	Expr -> Expr1 .                                     (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	'||'           shift, and enter state 42


State 18

	Stmt -> Expr . ';'                                  (rule 15)

	';'            shift, and enter state 41


State 19

	Expr5 -> '!' . Expr6                                (rule 34)

	'('            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 40

State 20

	Expr6 -> '(' . Expr ')'                             (rule 32)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 39

State 21

	Expr5 -> '-' . Expr6                                (rule 33)

	'('            shift, and enter state 20
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 38

State 22

	Type -> 'boolean' .                                 (rule 25)

	L_Ident        reduce using rule 25


State 23

	Expr6 -> 'false' .                                  (rule 29)

	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&&'           reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	';'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'||'           reduce using rule 29


State 24

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 12)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 13)

	'('            shift, and enter state 37


State 25

	Type -> 'int' .                                     (rule 23)

	L_Ident        reduce using rule 23


State 26

	Stmt -> 'return' . Expr ';'                         (rule 11)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 36

State 27

	Type -> 'string' .                                  (rule 24)

	L_Ident        reduce using rule 24


State 28

	Expr6 -> 'true' .                                   (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'/'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'||'           reduce using rule 28


State 29

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 14)

	'('            shift, and enter state 34


State 30

	Block -> '{' . ListStmt '}'                         (rule 5)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'boolean'      shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'return'       shift, and enter state 26
	'string'       shift, and enter state 27
	'true'         shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 30
	'}'            reduce using rule 6
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	ListStmt       goto state 33
	Stmt           goto state 9
	Fun            goto state 10
	Type           goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 31

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 32

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 33

	Block -> '{' ListStmt . '}'                         (rule 5)

	'}'            shift, and enter state 76


State 34

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 14)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 75

State 35

	Expr6 -> Ident .                                    (rule 26)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 30)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&&'           reduce using rule 26
	'('            shift, and enter state 60
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'/'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'||'           reduce using rule 26


State 36

	Stmt -> 'return' Expr . ';'                         (rule 11)

	';'            shift, and enter state 74


State 37

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 12)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 13)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 73

State 38

	Expr5 -> '-' Expr6 .                                (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'||'           reduce using rule 33


State 39

	Expr6 -> '(' Expr . ')'                             (rule 32)

	')'            shift, and enter state 72


State 40

	Expr5 -> '!' Expr6 .                                (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34


State 41

	Stmt -> Expr ';' .                                  (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	'boolean'      reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 42

	Expr -> Expr1 '||' . Expr                           (rule 44)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 71

State 43

	Expr2 -> Expr2 RelOp . Expr3                        (rule 40)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 70

State 44

	RelOp -> '!=' .                                     (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 45

	Expr1 -> Expr2 '&&' . Expr1                         (rule 42)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 69

State 46

	RelOp -> '<' .                                      (rule 54)

	'!'            reduce using rule 54
	'('            reduce using rule 54
	'-'            reduce using rule 54
	'false'        reduce using rule 54
	'true'         reduce using rule 54
	L_Ident        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54


State 47

	RelOp -> '<=' .                                     (rule 55)

	'!'            reduce using rule 55
	'('            reduce using rule 55
	'-'            reduce using rule 55
	'false'        reduce using rule 55
	'true'         reduce using rule 55
	L_Ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55


State 48

	RelOp -> '==' .                                     (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 49

	RelOp -> '>' .                                      (rule 56)

	'!'            reduce using rule 56
	'('            reduce using rule 56
	'-'            reduce using rule 56
	'false'        reduce using rule 56
	'true'         reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 50

	RelOp -> '>=' .                                     (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 51

	Expr3 -> Expr3 AddOp . Expr4                        (rule 38)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 68

State 52

	AddOp -> '+' .                                      (rule 49)

	'!'            reduce using rule 49
	'('            reduce using rule 49
	'-'            reduce using rule 49
	'false'        reduce using rule 49
	'true'         reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49


State 53

	AddOp -> '-' .                                      (rule 50)

	'!'            reduce using rule 50
	'('            reduce using rule 50
	'-'            reduce using rule 50
	'false'        reduce using rule 50
	'true'         reduce using rule 50
	L_Ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50


State 54

	Expr4 -> Expr4 MulOp . Expr5                        (rule 36)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 67

State 55

	MulOp -> '%' .                                      (rule 53)

	'!'            reduce using rule 53
	'('            reduce using rule 53
	'-'            reduce using rule 53
	'false'        reduce using rule 53
	'true'         reduce using rule 53
	L_Ident        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53


State 56

	MulOp -> '*' .                                      (rule 51)

	'!'            reduce using rule 51
	'('            reduce using rule 51
	'-'            reduce using rule 51
	'false'        reduce using rule 51
	'true'         reduce using rule 51
	L_Ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51


State 57

	MulOp -> '/' .                                      (rule 52)

	'!'            reduce using rule 52
	'('            reduce using rule 52
	'-'            reduce using rule 52
	'false'        reduce using rule 52
	'true'         reduce using rule 52
	L_Ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52


State 58

	Stmt -> Type Ident . '=' Expr ';'                   (rule 9)
	Fun -> Type Ident . '(' ListArg ')' Block           (rule 17)

	'('            shift, and enter state 65
	'='            shift, and enter state 66


State 59

	ListStmt -> Stmt ListStmt .                         (rule 7)

	'}'            reduce using rule 7
	%eof           reduce using rule 7


State 60

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 30)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	')'            reduce using rule 46
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 63
	ListExpr       goto state 64

State 61

	Stmt -> Ident '=' . Expr ';'                        (rule 10)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 62

State 62

	Stmt -> Ident '=' Expr . ';'                        (rule 10)

	';'            shift, and enter state 86


State 63

	ListExpr -> Expr .                                  (rule 47)
	ListExpr -> Expr . ',' ListExpr                     (rule 48)

	')'            reduce using rule 47
	','            shift, and enter state 85


State 64

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 30)

	')'            shift, and enter state 84


State 65

	Fun -> Type Ident '(' . ListArg ')' Block           (rule 17)

	')'            reduce using rule 20
	'boolean'      shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 27
	'var'          shift, and enter state 83

	Arg            goto state 80
	ListArg        goto state 81
	Type           goto state 82

State 66

	Stmt -> Type Ident '=' . Expr ';'                   (rule 9)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 79

State 67

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36


State 68

	Expr4 -> Expr4 . MulOp Expr5                        (rule 36)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 38)

	'!='           reduce using rule 38
	'%'            shift, and enter state 55
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            shift, and enter state 56
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            shift, and enter state 57
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38

	MulOp          goto state 54

State 69

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 42)

	')'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	'||'           reduce using rule 42


State 70

	Expr3 -> Expr3 . AddOp Expr4                        (rule 38)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 40)

	'!='           reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'+'            shift, and enter state 52
	','            reduce using rule 40
	'-'            shift, and enter state 53
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40

	AddOp          goto state 51

State 71

	Expr -> Expr1 '||' Expr .                           (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44


State 72

	Expr6 -> '(' Expr ')' .                             (rule 32)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'||'           reduce using rule 32


State 73

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 12)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 13)

	')'            shift, and enter state 78


State 74

	Stmt -> 'return' Expr ';' .                         (rule 11)

	'!'            reduce using rule 11
	'('            reduce using rule 11
	'-'            reduce using rule 11
	'boolean'      reduce using rule 11
	'else'         reduce using rule 11
	'false'        reduce using rule 11
	'if'           reduce using rule 11
	'int'          reduce using rule 11
	'return'       reduce using rule 11
	'string'       reduce using rule 11
	'true'         reduce using rule 11
	'while'        reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_Ident        reduce using rule 11
	L_integ        reduce using rule 11
	L_quoted       reduce using rule 11
	%eof           reduce using rule 11


State 75

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 14)

	')'            shift, and enter state 77


State 76

	Block -> '{' ListStmt '}' .                         (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	'boolean'      reduce using rule 5
	'else'         reduce using rule 5
	'false'        reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 77

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 14)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'boolean'      shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'return'       shift, and enter state 26
	'string'       shift, and enter state 27
	'true'         shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 94
	Fun            goto state 10
	Type           goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 78

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 12)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 13)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'boolean'      shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'return'       shift, and enter state 26
	'string'       shift, and enter state 27
	'true'         shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 93
	Fun            goto state 10
	Type           goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 79

	Stmt -> Type Ident '=' Expr . ';'                   (rule 9)

	';'            shift, and enter state 92


State 80

	ListArg -> Arg .                                    (rule 21)
	ListArg -> Arg . ',' ListArg                        (rule 22)

	')'            reduce using rule 21
	','            shift, and enter state 91


State 81

	Fun -> Type Ident '(' ListArg . ')' Block           (rule 17)

	')'            shift, and enter state 90


State 82

	Arg -> Type . Ident                                 (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 89

State 83

	Arg -> 'var' . Type Ident                           (rule 18)

	'boolean'      shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 27

	Type           goto state 88

State 84

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 30)

	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&&'           reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'/'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'||'           reduce using rule 30


State 85

	ListExpr -> Expr ',' . ListExpr                     (rule 48)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	')'            reduce using rule 46
	'-'            shift, and enter state 21
	'false'        shift, and enter state 23
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 35
	Integer        goto state 4
	String         goto state 5
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 63
	ListExpr       goto state 87

State 86

	Stmt -> Ident '=' Expr ';' .                        (rule 10)

	'!'            reduce using rule 10
	'('            reduce using rule 10
	'-'            reduce using rule 10
	'boolean'      reduce using rule 10
	'else'         reduce using rule 10
	'false'        reduce using rule 10
	'if'           reduce using rule 10
	'int'          reduce using rule 10
	'return'       reduce using rule 10
	'string'       reduce using rule 10
	'true'         reduce using rule 10
	'while'        reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_Ident        reduce using rule 10
	L_integ        reduce using rule 10
	L_quoted       reduce using rule 10
	%eof           reduce using rule 10


State 87

	ListExpr -> Expr ',' ListExpr .                     (rule 48)

	')'            reduce using rule 48


State 88

	Arg -> 'var' Type . Ident                           (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 98

State 89

	Arg -> Type Ident .                                 (rule 19)

	')'            reduce using rule 19
	','            reduce using rule 19


State 90

	Fun -> Type Ident '(' ListArg ')' . Block           (rule 17)

	'{'            shift, and enter state 30

	Block          goto state 97

State 91

	ListArg -> Arg ',' . ListArg                        (rule 22)

	')'            reduce using rule 20
	'boolean'      shift, and enter state 22
	'int'          shift, and enter state 25
	'string'       shift, and enter state 27
	'var'          shift, and enter state 83

	Arg            goto state 80
	ListArg        goto state 96
	Type           goto state 82

State 92

	Stmt -> Type Ident '=' Expr ';' .                   (rule 9)

	'!'            reduce using rule 9
	'('            reduce using rule 9
	'-'            reduce using rule 9
	'boolean'      reduce using rule 9
	'else'         reduce using rule 9
	'false'        reduce using rule 9
	'if'           reduce using rule 9
	'int'          reduce using rule 9
	'return'       reduce using rule 9
	'string'       reduce using rule 9
	'true'         reduce using rule 9
	'while'        reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	L_quoted       reduce using rule 9
	%eof           reduce using rule 9


State 93

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 12)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 13)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	'boolean'      reduce using rule 12
	'else'         shift, and enter state 95
			(reduce using rule 12)

	'false'        reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 94

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	'boolean'      reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 95

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 13)

	'!'            shift, and enter state 19
	'('            shift, and enter state 20
	'-'            shift, and enter state 21
	'boolean'      shift, and enter state 22
	'false'        shift, and enter state 23
	'if'           shift, and enter state 24
	'int'          shift, and enter state 25
	'return'       shift, and enter state 26
	'string'       shift, and enter state 27
	'true'         shift, and enter state 28
	'while'        shift, and enter state 29
	'{'            shift, and enter state 30
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 31
	L_quoted       shift, and enter state 32

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Block          goto state 7
	Stmt           goto state 99
	Fun            goto state 10
	Type           goto state 11
	Expr6          goto state 12
	Expr5          goto state 13
	Expr4          goto state 14
	Expr3          goto state 15
	Expr2          goto state 16
	Expr1          goto state 17
	Expr           goto state 18

State 96

	ListArg -> Arg ',' ListArg .                        (rule 22)

	')'            reduce using rule 22


State 97

	Fun -> Type Ident '(' ListArg ')' Block .           (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	'boolean'      reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 98

	Arg -> 'var' Type Ident .                           (rule 18)

	')'            reduce using rule 18
	','            reduce using rule 18


State 99

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	'boolean'      reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 60
Number of terminals: 34
Number of non-terminals: 23
Number of states: 100
