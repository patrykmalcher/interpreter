-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Fox/Par.y
-----------------------------------------------------------------------------

state 105 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListFun                                 (4)
	Fun -> Type Ident '(' ListArg ')' Block            (5)
	ListFun -> Fun                                     (6)
	ListFun -> Fun ListFun                             (7)
	Arg -> 'var' Type Ident                            (8)
	Arg -> Type Ident                                  (9)
	ListArg ->                                         (10)
	ListArg -> Arg                                     (11)
	ListArg -> Arg ',' ListArg                         (12)
	Block -> '{' ListStmt '}'                          (13)
	ListStmt ->                                        (14)
	ListStmt -> Stmt ListStmt                          (15)
	Stmt -> Block                                      (16)
	Stmt -> Type ListItem ';'                          (17)
	Stmt -> Ident '=' Expr ';'                         (18)
	Stmt -> 'return' Expr ';'                          (19)
	Stmt -> 'if' '(' Expr ')' Stmt                     (20)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (21)
	Stmt -> 'while' '(' Expr ')' Stmt                  (22)
	Stmt -> Expr ';'                                   (23)
	Stmt -> Fun                                        (24)
	Item -> Ident                                      (25)
	Item -> Ident '=' Expr                             (26)
	ListItem -> Item                                   (27)
	ListItem -> Item ',' ListItem                      (28)
	Type -> 'int'                                      (29)
	Type -> 'string'                                   (30)
	Type -> 'boolean'                                  (31)
	Expr6 -> Ident                                     (32)
	Expr6 -> Integer                                   (33)
	Expr6 -> 'true'                                    (34)
	Expr6 -> 'false'                                   (35)
	Expr6 -> Ident '(' ListExpr ')'                    (36)
	Expr6 -> String                                    (37)
	Expr6 -> '(' Expr ')'                              (38)
	Expr5 -> '-' Expr6                                 (39)
	Expr5 -> '!' Expr6                                 (40)
	Expr5 -> Expr6                                     (41)
	Expr4 -> Expr4 MulOp Expr5                         (42)
	Expr4 -> Expr5                                     (43)
	Expr3 -> Expr3 AddOp Expr4                         (44)
	Expr3 -> Expr4                                     (45)
	Expr2 -> Expr2 RelOp Expr3                         (46)
	Expr2 -> Expr3                                     (47)
	Expr1 -> Expr2 '&&' Expr1                          (48)
	Expr1 -> Expr2                                     (49)
	Expr -> Expr1 '||' Expr                            (50)
	Expr -> Expr1                                      (51)
	ListExpr ->                                        (52)
	ListExpr -> Expr                                   (53)
	ListExpr -> Expr ',' ListExpr                      (54)
	AddOp -> '+'                                       (55)
	AddOp -> '-'                                       (56)
	MulOp -> '*'                                       (57)
	MulOp -> '/'                                       (58)
	MulOp -> '%'                                       (59)
	RelOp -> '<'                                       (60)
	RelOp -> '<='                                      (61)
	RelOp -> '>'                                       (62)
	RelOp -> '>='                                      (63)
	RelOp -> '=='                                      (64)
	RelOp -> '!='                                      (65)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	','            { PT _ (TS _ 9) }
	'-'            { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'boolean'      { PT _ (TS _ 19) }
	'else'         { PT _ (TS _ 20) }
	'false'        { PT _ (TS _ 21) }
	'if'           { PT _ (TS _ 22) }
	'int'          { PT _ (TS _ 23) }
	'return'       { PT _ (TS _ 24) }
	'string'       { PT _ (TS _ 25) }
	'true'         { PT _ (TS _ 26) }
	'var'          { PT _ (TS _ 27) }
	'while'        { PT _ (TS _ 28) }
	'{'            { PT _ (TS _ 29) }
	'||'           { PT _ (TS _ 30) }
	'}'            { PT _ (TS _ 31) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Fun             rule  5
	ListFun         rules 6, 7
	Arg             rules 8, 9
	ListArg         rules 10, 11, 12
	Block           rule  13
	ListStmt        rules 14, 15
	Stmt            rules 16, 17, 18, 19, 20, 21, 22, 23, 24
	Item            rules 25, 26
	ListItem        rules 27, 28
	Type            rules 29, 30, 31
	Expr6           rules 32, 33, 34, 35, 36, 37, 38
	Expr5           rules 39, 40, 41
	Expr4           rules 42, 43
	Expr3           rules 44, 45
	Expr2           rules 46, 47
	Expr1           rules 48, 49
	Expr            rules 50, 51
	ListExpr        rules 52, 53, 54
	AddOp           rules 55, 56
	MulOp           rules 57, 58, 59
	RelOp           rules 60, 61, 62, 63, 64, 65

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram -> . Program                        (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Program        goto state 3
	Fun            goto state 4
	ListFun        goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListFun -> Fun .                                    (rule 6)
	ListFun -> Fun . ListFun                            (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	%eof           reduce using rule 6

	Fun            goto state 4
	ListFun        goto state 11
	Type           goto state 6

State 5

	Program -> ListFun .                                (rule 4)

	%eof           reduce using rule 4


State 6

	Fun -> Type . Ident '(' ListArg ')' Block           (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 7

	Type -> 'boolean' .                                 (rule 31)

	L_Ident        reduce using rule 31


State 8

	Type -> 'int' .                                     (rule 29)

	L_Ident        reduce using rule 29


State 9

	Type -> 'string' .                                  (rule 30)

	L_Ident        reduce using rule 30


State 10

	Fun -> Type Ident . '(' ListArg ')' Block           (rule 5)

	'('            shift, and enter state 12


State 11

	ListFun -> Fun ListFun .                            (rule 7)

	%eof           reduce using rule 7


State 12

	Fun -> Type Ident '(' . ListArg ')' Block           (rule 5)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'var'          shift, and enter state 16

	Arg            goto state 13
	ListArg        goto state 14
	Type           goto state 15

State 13

	ListArg -> Arg .                                    (rule 11)
	ListArg -> Arg . ',' ListArg                        (rule 12)

	')'            reduce using rule 11
	','            shift, and enter state 20


State 14

	Fun -> Type Ident '(' ListArg . ')' Block           (rule 5)

	')'            shift, and enter state 19


State 15

	Arg -> Type . Ident                                 (rule 9)

	L_Ident        shift, and enter state 2

	Ident          goto state 18

State 16

	Arg -> 'var' . Type Ident                           (rule 8)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9

	Type           goto state 17

State 17

	Arg -> 'var' Type . Ident                           (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 18

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 19

	Fun -> Type Ident '(' ListArg ')' . Block           (rule 5)

	'{'            shift, and enter state 23

	Block          goto state 22

State 20

	ListArg -> Arg ',' . ListArg                        (rule 12)

	')'            reduce using rule 10
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'var'          shift, and enter state 16

	Arg            goto state 13
	ListArg        goto state 21
	Type           goto state 15

State 21

	ListArg -> Arg ',' ListArg .                        (rule 12)

	')'            reduce using rule 12


State 22

	Fun -> Type Ident '(' ListArg ')' Block .           (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	'boolean'      reduce using rule 5
	'else'         reduce using rule 5
	'false'        reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 23

	Block -> '{' . ListStmt '}'                         (rule 13)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 43
	'if'           shift, and enter state 44
	'int'          shift, and enter state 8
	'return'       shift, and enter state 45
	'string'       shift, and enter state 9
	'true'         shift, and enter state 46
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Fun            goto state 28
	Block          goto state 29
	ListStmt       goto state 30
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 24

	Arg -> 'var' Type Ident .                           (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 25

	Stmt -> Ident . '=' Expr ';'                        (rule 18)
	Expr6 -> Ident .                                    (rule 32)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 36)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	'('            shift, and enter state 79
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'='            shift, and enter state 80
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'||'           reduce using rule 32


State 26

	Expr6 -> Integer .                                  (rule 33)

	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&&'           reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	';'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'||'           reduce using rule 33


State 27

	Expr6 -> String .                                   (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 28

	Stmt -> Fun .                                       (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 29

	Stmt -> Block .                                     (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	'boolean'      reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 30

	Block -> '{' ListStmt . '}'                         (rule 13)

	'}'            shift, and enter state 78


State 31

	ListStmt -> Stmt . ListStmt                         (rule 15)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 43
	'if'           shift, and enter state 44
	'int'          shift, and enter state 8
	'return'       shift, and enter state 45
	'string'       shift, and enter state 9
	'true'         shift, and enter state 46
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	'}'            reduce using rule 14
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Fun            goto state 28
	Block          goto state 29
	ListStmt       goto state 77
	Stmt           goto state 31
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 32

	Fun -> Type . Ident '(' ListArg ')' Block           (rule 5)
	Stmt -> Type . ListItem ';'                         (rule 17)

	L_Ident        shift, and enter state 2

	Ident          goto state 74
	Item           goto state 75
	ListItem       goto state 76

State 33

	Expr5 -> Expr6 .                                    (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 34

	Expr4 -> Expr5 .                                    (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 35

	Expr4 -> Expr4 . MulOp Expr5                        (rule 42)
	Expr3 -> Expr4 .                                    (rule 45)

	'!='           reduce using rule 45
	'%'            shift, and enter state 71
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            shift, and enter state 72
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            shift, and enter state 73
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45

	MulOp          goto state 70

State 36

	Expr3 -> Expr3 . AddOp Expr4                        (rule 44)
	Expr2 -> Expr3 .                                    (rule 47)

	'!='           reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'+'            shift, and enter state 68
	','            reduce using rule 47
	'-'            shift, and enter state 69
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47

	AddOp          goto state 67

State 37

	Expr2 -> Expr2 . RelOp Expr3                        (rule 46)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 48)
	Expr1 -> Expr2 .                                    (rule 49)

	'!='           shift, and enter state 60
	'&&'           shift, and enter state 61
	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	'<'            shift, and enter state 62
	'<='           shift, and enter state 63
	'=='           shift, and enter state 64
	'>'            shift, and enter state 65
	'>='           shift, and enter state 66
	'||'           reduce using rule 49

	RelOp          goto state 59

State 38

	Expr -> Expr1 . '||' Expr                           (rule 50)
	Expr -> Expr1 .                                     (rule 51)

	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'||'           shift, and enter state 58


State 39

	Stmt -> Expr . ';'                                  (rule 23)

	';'            shift, and enter state 57


State 40

	Expr5 -> '!' . Expr6                                (rule 40)

	'('            shift, and enter state 41
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 56

State 41

	Expr6 -> '(' . Expr ')'                             (rule 38)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 55

State 42

	Expr5 -> '-' . Expr6                                (rule 39)

	'('            shift, and enter state 41
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 54

State 43

	Expr6 -> 'false' .                                  (rule 35)

	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&&'           reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'||'           reduce using rule 35


State 44

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 20)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 21)

	'('            shift, and enter state 53


State 45

	Stmt -> 'return' . Expr ';'                         (rule 19)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 52

State 46

	Expr6 -> 'true' .                                   (rule 34)

	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&&'           reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	';'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'||'           reduce using rule 34


State 47

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 22)

	'('            shift, and enter state 50


State 48

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 49

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 50

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 22)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 95

State 51

	Expr6 -> Ident .                                    (rule 32)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 36)

	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&&'           reduce using rule 32
	'('            shift, and enter state 79
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'||'           reduce using rule 32


State 52

	Stmt -> 'return' Expr . ';'                         (rule 19)

	';'            shift, and enter state 94


State 53

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 20)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 21)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 93

State 54

	Expr5 -> '-' Expr6 .                                (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 55

	Expr6 -> '(' Expr . ')'                             (rule 38)

	')'            shift, and enter state 92


State 56

	Expr5 -> '!' Expr6 .                                (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 57

	Stmt -> Expr ';' .                                  (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 58

	Expr -> Expr1 '||' . Expr                           (rule 50)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 91

State 59

	Expr2 -> Expr2 RelOp . Expr3                        (rule 46)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 90

State 60

	RelOp -> '!=' .                                     (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 61

	Expr1 -> Expr2 '&&' . Expr1                         (rule 48)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 89

State 62

	RelOp -> '<' .                                      (rule 60)

	'!'            reduce using rule 60
	'('            reduce using rule 60
	'-'            reduce using rule 60
	'false'        reduce using rule 60
	'true'         reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 63

	RelOp -> '<=' .                                     (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 64

	RelOp -> '==' .                                     (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 65

	RelOp -> '>' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 66

	RelOp -> '>=' .                                     (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 67

	Expr3 -> Expr3 AddOp . Expr4                        (rule 44)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 88

State 68

	AddOp -> '+' .                                      (rule 55)

	'!'            reduce using rule 55
	'('            reduce using rule 55
	'-'            reduce using rule 55
	'false'        reduce using rule 55
	'true'         reduce using rule 55
	L_Ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55


State 69

	AddOp -> '-' .                                      (rule 56)

	'!'            reduce using rule 56
	'('            reduce using rule 56
	'-'            reduce using rule 56
	'false'        reduce using rule 56
	'true'         reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 70

	Expr4 -> Expr4 MulOp . Expr5                        (rule 42)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 87

State 71

	MulOp -> '%' .                                      (rule 59)

	'!'            reduce using rule 59
	'('            reduce using rule 59
	'-'            reduce using rule 59
	'false'        reduce using rule 59
	'true'         reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 72

	MulOp -> '*' .                                      (rule 57)

	'!'            reduce using rule 57
	'('            reduce using rule 57
	'-'            reduce using rule 57
	'false'        reduce using rule 57
	'true'         reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 73

	MulOp -> '/' .                                      (rule 58)

	'!'            reduce using rule 58
	'('            reduce using rule 58
	'-'            reduce using rule 58
	'false'        reduce using rule 58
	'true'         reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 74

	Fun -> Type Ident . '(' ListArg ')' Block           (rule 5)
	Item -> Ident .                                     (rule 25)
	Item -> Ident . '=' Expr                            (rule 26)

	'('            shift, and enter state 12
	','            reduce using rule 25
	';'            reduce using rule 25
	'='            shift, and enter state 86


State 75

	ListItem -> Item .                                  (rule 27)
	ListItem -> Item . ',' ListItem                     (rule 28)

	','            shift, and enter state 85
	';'            reduce using rule 27


State 76

	Stmt -> Type ListItem . ';'                         (rule 17)

	';'            shift, and enter state 84


State 77

	ListStmt -> Stmt ListStmt .                         (rule 15)

	'}'            reduce using rule 15


State 78

	Block -> '{' ListStmt '}' .                         (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'-'            reduce using rule 13
	'boolean'      reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'if'           reduce using rule 13
	'int'          reduce using rule 13
	'return'       reduce using rule 13
	'string'       reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_Ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	%eof           reduce using rule 13


State 79

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 36)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	')'            reduce using rule 52
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 82
	ListExpr       goto state 83

State 80

	Stmt -> Ident '=' . Expr ';'                        (rule 18)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 81

State 81

	Stmt -> Ident '=' Expr . ';'                        (rule 18)

	';'            shift, and enter state 103


State 82

	ListExpr -> Expr .                                  (rule 53)
	ListExpr -> Expr . ',' ListExpr                     (rule 54)

	')'            reduce using rule 53
	','            shift, and enter state 102


State 83

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 36)

	')'            shift, and enter state 101


State 84

	Stmt -> Type ListItem ';' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	'boolean'      reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 85

	ListItem -> Item ',' . ListItem                     (rule 28)

	L_Ident        shift, and enter state 2

	Ident          goto state 99
	Item           goto state 75
	ListItem       goto state 100

State 86

	Item -> Ident '=' . Expr                            (rule 26)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 98

State 87

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 88

	Expr4 -> Expr4 . MulOp Expr5                        (rule 42)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 44)

	'!='           reduce using rule 44
	'%'            shift, and enter state 71
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            shift, and enter state 72
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            shift, and enter state 73
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44

	MulOp          goto state 70

State 89

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 48)

	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'||'           reduce using rule 48


State 90

	Expr3 -> Expr3 . AddOp Expr4                        (rule 44)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 46)

	'!='           reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'+'            shift, and enter state 68
	','            reduce using rule 46
	'-'            shift, and enter state 69
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46

	AddOp          goto state 67

State 91

	Expr -> Expr1 '||' Expr .                           (rule 50)

	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50


State 92

	Expr6 -> '(' Expr ')' .                             (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 93

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 20)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 21)

	')'            shift, and enter state 97


State 94

	Stmt -> 'return' Expr ';' .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	'boolean'      reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 95

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 22)

	')'            shift, and enter state 96


State 96

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 22)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 43
	'if'           shift, and enter state 44
	'int'          shift, and enter state 8
	'return'       shift, and enter state 45
	'string'       shift, and enter state 9
	'true'         shift, and enter state 46
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Fun            goto state 28
	Block          goto state 29
	Stmt           goto state 106
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 97

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 20)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 21)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 43
	'if'           shift, and enter state 44
	'int'          shift, and enter state 8
	'return'       shift, and enter state 45
	'string'       shift, and enter state 9
	'true'         shift, and enter state 46
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Fun            goto state 28
	Block          goto state 29
	Stmt           goto state 105
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 98

	Item -> Ident '=' Expr .                            (rule 26)

	','            reduce using rule 26
	';'            reduce using rule 26


State 99

	Item -> Ident .                                     (rule 25)
	Item -> Ident . '=' Expr                            (rule 26)

	','            reduce using rule 25
	';'            reduce using rule 25
	'='            shift, and enter state 86


State 100

	ListItem -> Item ',' ListItem .                     (rule 28)

	';'            reduce using rule 28


State 101

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 36)

	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&&'           reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'||'           reduce using rule 36


State 102

	ListExpr -> Expr ',' . ListExpr                     (rule 54)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	')'            reduce using rule 52
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'true'         shift, and enter state 46
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 51
	Integer        goto state 26
	String         goto state 27
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 82
	ListExpr       goto state 104

State 103

	Stmt -> Ident '=' Expr ';' .                        (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	'boolean'      reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 104

	ListExpr -> Expr ',' ListExpr .                     (rule 54)

	')'            reduce using rule 54


State 105

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 20)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 21)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	'boolean'      reduce using rule 20
	'else'         shift, and enter state 107
			(reduce using rule 20)

	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 106

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 107

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 21)

	'!'            shift, and enter state 40
	'('            shift, and enter state 41
	'-'            shift, and enter state 42
	'boolean'      shift, and enter state 7
	'false'        shift, and enter state 43
	'if'           shift, and enter state 44
	'int'          shift, and enter state 8
	'return'       shift, and enter state 45
	'string'       shift, and enter state 9
	'true'         shift, and enter state 46
	'while'        shift, and enter state 47
	'{'            shift, and enter state 23
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 48
	L_quoted       shift, and enter state 49

	Ident          goto state 25
	Integer        goto state 26
	String         goto state 27
	Fun            goto state 28
	Block          goto state 29
	Stmt           goto state 108
	Type           goto state 32
	Expr6          goto state 33
	Expr5          goto state 34
	Expr4          goto state 35
	Expr3          goto state 36
	Expr2          goto state 37
	Expr1          goto state 38
	Expr           goto state 39

State 108

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 66
Number of terminals: 34
Number of non-terminals: 26
Number of states: 109
